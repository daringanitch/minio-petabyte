apiVersion: v1
kind: Service
metadata:
 name: minio
 labels:
   app: minio
spec:
 clusterIP: None
 ports:
   - port: 9000
     name: minio
 selector:
   app: minio
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
 name: minio
spec:
 serviceName: minio
 replicas: 32
 template:
   metadata:
     labels:
       app: minio
   spec:
     containers:
     - name: minio
       env:
       - name: MINIO_ACCESS_KEY
         value: "add-any-string"
       - name: MINIO_SECRET_KEY
         value: "add-any-String"
       image: minio/minio:RELEASE.2018-12-06T01-27-43Z
       args:
       - server
       - http://minio-{0...31}.minio.default.svc.cluster.local/data{1...4}
       ports:
       - containerPort: 9000
       # These volume mounts are persistent. Each pod in the PetSet
       # gets a volume mounted based on this field.
       volumeMounts:
       - name: data1
         mountPath: /data1
       - name: data2
         mountPath: /data2
       - name: data3
         mountPath: /data3
       - name: data4
         mountPath: /data4
 # These are converted to volume claims by the controller
 # and mounted at the paths mentioned above.
 volumeClaimTemplates:
 - metadata:
     name: data1
   spec:
     accessModes:
       - ReadWriteOnce
     resources:
       requests:
         storage: 16Ti
     # Uncomment and add storageClass specific to your requirements below. Read more https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
     storageClassName: gp2
 - metadata:
     name: data2
   spec:
     accessModes:
       - ReadWriteOnce
     resources:
       requests:
         storage: 16Ti
     # Uncomment and add storageClass specific to your requirements below. Read more https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
     storageClassName: gp2
 - metadata:
     name: data3
   spec:
     accessModes:
       - ReadWriteOnce
     resources:
       requests:
         storage: 16Ti
     # Uncomment and add storageClass specific to your requirements below. Read more https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
     storageClassName: gp2
 - metadata:
     name: data4
   spec:
     accessModes:
       - ReadWriteOnce
     resources:
       requests:
         storage: 16Ti
     # Uncomment and add storageClass specific to your requirements below. Read more https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
     storageClassName: gp2
---
apiVersion: v1
kind: Service
metadata:
 name: minio-service
spec:
 type: LoadBalancer
 ports:
   - port: 9000
     targetPort: 9000
     protocol: TCP
 selector:
   app: minio
